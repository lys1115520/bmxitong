{"remainingRequest":"C:\\Users\\web\\Desktop\\projects\\mobiebm\\bmmobileapp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\web\\Desktop\\projects\\mobiebm\\bmmobileapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\web\\Desktop\\projects\\mobiebm\\bmmobileapp\\src\\components\\xz\\common\\Cart.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\web\\Desktop\\projects\\mobiebm\\bmmobileapp\\src\\components\\xz\\common\\Cart.vue","mtime":1560777495303},{"path":"C:\\Users\\web\\Desktop\\projects\\mobiebm\\bmmobileapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\web\\Desktop\\projects\\mobiebm\\bmmobileapp\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\Users\\web\\Desktop\\projects\\mobiebm\\bmmobileapp\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      list: []\n    };\n  },\n  created: function created() {\n    this.loadMore();\n  },\n  methods: {\n    //删除购物车中的商品\n    delItem: function delItem(e) {\n      var _this = this;\n\n      //删除之前判断是否删除\n      this.$messagebox({\n        title: \"消息\",\n        message: \"是否删除商品\",\n        showConfirmButton: true,\n        showCancelButton: true\n      }).then(function (result) {\n        if (\"cancel\" == result) {\n          return;\n        } else {\n          //获取当前商品id\n          var id = e.target.dataset.id; //发送ajax删除商品\n\n          var url = \"del\";\n          var obj = {\n            id: id\n          };\n\n          _this.axios.get(url, {\n            params: obj\n          }).then(function (result) {\n            //console.log(result)\n            //刷新\n            _this.loadMore();\n          });\n        }\n      });\n    },\n    //加载购物车数据\n    loadMore: function loadMore() {\n      var _this2 = this;\n\n      //console.log(123)\n      //创建URL\n      var url = \"cart\"; //发送ajax\n\n      this.axios.get(url).then(function (result) {\n        //获取数组\n        var rows = result.data.data; //创建循环 为其添加cb 属性\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n            item.cb = false;\n          } //将修改后的数据赋值给数组\n\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        _this2.list = rows;\n      }); //获取服务器数据\n      //保存\n    },\n    //全选\n    selectAll: function selectAll(e) {\n      //获取全选按钮的状态\n      var rs = e.target.checked;\n      console.log(rs); //获取购物车数组的列表\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.list[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n          item.cb = rs;\n        } //创建一个循环\n        //将当前商品的cb状态修改为全选\n\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    },\n    //清空购物车商品\n    delAll: function delAll() {\n      var _this3 = this;\n\n      //确认框\n      //创建变量保存空字符串\n      var str = \"\"; //创建循环遍历数组\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.list[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var item = _step3.value;\n          str += item.id + \",\";\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      str = str.substring(0, str.length - 1);\n      console.log(str); //获取当前元素id 拼接字符串\n      //创建url   delAll\n\n      var url = \"delAll\"; //创建obj\n\n      var obj = {\n        ids: str //发送ajax请求\n\n      };\n\n      if (str != \"\") {\n        this.axios.get(url, {\n          params: obj\n        }).then(function (result) {\n          console.log(result);\n\n          _this3.loadMore();\n        });\n      } //刷新\n\n    },\n    //删除选中商品\n    delSelected: function delSelected() {\n      var _this4 = this;\n\n      //console.log(123)\n      //判断cb==true 获取id\n      //拼接字符串\n      //创建变量保存空字符串\n      var str = \"\"; //循环数组中的元素\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this.list[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var item = _step4.value;\n\n          //判断cb==true\n          //获取当前id拼字符串\n          if (item.cb) {\n            str += item.id + \",\";\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      console.log(str);\n\n      if (str.length == 0) {\n        this.$messagebox(\"\", \"请选中要删除的商品\");\n        return;\n      } //发送ajax请求\n\n\n      str = str.substring(0, str.length - 1);\n      var url = \"delAll\";\n      var obj = {\n        ids: str\n      };\n      this.axios.get(url, {\n        params: obj\n      }).then(function (result) {\n        _this4.loadMore();\n      }); //刷新\n    }\n  }\n};",{"version":3,"sources":["Cart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"cart\">\r\n        <!-- 全选按钮 -->\r\n        <div class=\"selectAll\">\r\n            全选 <input type=\"checkbox\" @change=\"selectAll\">\r\n        </div> \r\n        <!-- 购物商品信息 -->\r\n        <div class=\"cart-item\" v-for=\"(item,index) of list\" :key=\"index\">\r\n            <div class=\"leftImgTxt\">\r\n                <input type=\"checkbox\" v-model=\"item.cb\">\r\n                <img :src=\"'http://127.0.0.1:3000/'+item.img\" alt=\"\" class=\"img\">\r\n                <div class=\"rightImg\">\r\n                    <span>{{item.price}}</span>\r\n                    <span>1</span>\r\n                </div>\r\n            </div>\r\n            <mt-button @click=\"delItem\" :data-id=\"item.id\">删除</mt-button>\r\n        </div>\r\n        <!-- 删除选中的商品 -->\r\n        <div class=\"delAll\">\r\n            <mt-button @click=\"delSelected\">删除选中</mt-button>\r\n            <mt-button @click=\"delAll\">清空购物车</mt-button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            list:[]\r\n        }\r\n    },\r\n    created(){\r\n        this.loadMore();\r\n    },\r\n  \r\n    methods:{\r\n        //删除购物车中的商品\r\n        delItem(e){\r\n            //删除之前判断是否删除\r\n            this.$messagebox({\r\n               title:\"消息\",\r\n               message:\"是否删除商品\",\r\n               showConfirmButton:true,\r\n               showCancelButton:true,\r\n            }).then(result=>{\r\n                if(\"cancel\"==result){\r\n                    return\r\n                }else{\r\n                    //获取当前商品id\r\n                    var id = e.target.dataset.id;\r\n                    //发送ajax删除商品\r\n                     var url = \"del\"\r\n                    var obj = {id:id}\r\n                    this.axios.get(url,{params:obj}).then(result=>{\r\n                    //console.log(result)\r\n                    //刷新\r\n                    this.loadMore();\r\n                    });\r\n                }\r\n            })  \r\n        },\r\n        //加载购物车数据\r\n        loadMore(){\r\n            //console.log(123)\r\n            //创建URL\r\n            var url = \"cart\"\r\n            //发送ajax\r\n            this.axios.get(url).then(result=>{\r\n                //获取数组\r\n                var rows=result.data.data;\r\n                //创建循环 为其添加cb 属性\r\n                for(var item of rows){\r\n                    item.cb = false;\r\n                }\r\n                //将修改后的数据赋值给数组\r\n                this.list=rows;\r\n            })\r\n            //获取服务器数据\r\n            //保存\r\n        },\r\n        //全选\r\n        selectAll(e){\r\n            //获取全选按钮的状态\r\n            var rs = e.target.checked\r\n            console.log(rs);\r\n            //获取购物车数组的列表\r\n            for(var item of this.list){\r\n                item.cb=rs;\r\n            }\r\n            //创建一个循环\r\n            //将当前商品的cb状态修改为全选\r\n        },\r\n        //清空购物车商品\r\n        delAll(){\r\n            //确认框\r\n            //创建变量保存空字符串\r\n            var str=\"\";\r\n            //创建循环遍历数组\r\n            for(var item of this.list){\r\n                str += item.id+\",\"\r\n            }\r\n            str=str.substring(0,str.length-1);\r\n            console.log(str)\r\n            //获取当前元素id 拼接字符串\r\n            //创建url   delAll\r\n            var url = \"delAll\";\r\n            //创建obj\r\n            var obj ={ids:str}\r\n            //发送ajax请求\r\n            if(str!=\"\"){\r\n            this.axios.get(url,{params:obj}).then(result=>{\r\n                console.log(result)\r\n                this.loadMore();\r\n            })}\r\n            //刷新\r\n        },\r\n        //删除选中商品\r\n        delSelected(){\r\n            //console.log(123)\r\n            //判断cb==true 获取id\r\n            //拼接字符串\r\n            //创建变量保存空字符串\r\n            var str=\"\";\r\n            //循环数组中的元素\r\n            for(var item of this.list){\r\n                //判断cb==true\r\n                //获取当前id拼字符串\r\n                if(item.cb){\r\n                    str += item.id+\",\"\r\n                }  \r\n            }\r\n            console.log(str)\r\n            if(str.length==0){\r\n                this.$messagebox(\"\",\"请选中要删除的商品\")\r\n                return;\r\n            }\r\n            //发送ajax请求\r\n            str=str.substring(0,str.length-1);\r\n            var url =\"delAll\";\r\n            var obj ={ids:str};\r\n            this.axios.get(url,{params:obj}).then(result=>{\r\n                this.loadMore();\r\n            })\r\n            //刷新\r\n        },\r\n\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/*商品的容器*/ \r\n.cart-item{\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border-bottom: 1px solid #ddd;\r\n    padding: 5px;\r\n}\r\n/*左侧的图片和文字*/ \r\n.leftImgTxt{\r\n    display: flex;\r\n}\r\n.img{\r\n    width: 50px;\r\n    height: 50px;\r\n}\r\n.rightImg{\r\n    display: flex;\r\n    margin-left: 25px;\r\n    align-items: center;\r\n}\r\n</style>\r\n\r\n\r\n"],"sourceRoot":"src\\components\\xz\\common"}]}